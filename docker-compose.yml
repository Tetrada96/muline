version: "3.9"

# networks:
#   proxy:
#     name: proxy

services:
  postgres:
    image: postgres:15
    # networks:
    #   - proxy
    environment:
      POSTGRES_DB: "habrdb"
      POSTGRES_USER: "habrpguser"
      POSTGRES_PASSWORD: "pgpwd4habr"
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      # copy the sql script to create tables
      - ./CheckMuline_back/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ../data:/var/lib/postgresql/data

  app:
    # networks:
    #   - proxy
    restart: always
    environment:
      DB_HOST: postgres
      DB_USERNAME: habrpguser
      DB_PASSWORD: pgpwd4habr
      DB_DATABASE: habrdb
      PORT: 8080
      JWT_ACCESS_SECRET: jwt-secret-key
      JWT_REFRESH_SECRET: jwt-secret-key
      SMTP_HOST: "smtp.mail.ru"
      SMTP_PORT: 465
      SMTP_USER: irishka08_072011@mail.ru
      SMTP_PASSWORD: uYGUtPbNMUj0PMSz8wcM
      API_URL: https://mulinehub.ru
      CLIENT_URL: http://localhost:801
    build:
      context: CheckMuline_back
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8080:8080"
    # depends_on:
    #   postgres:
    #     condition: service_healthy

  front:
    # networks:
    #   - proxy
    restart: always
    build:
      context: CheckMuline_front
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:801:80"
    # depends_on:
    #   postgres:
    #     condition: service_healthy
